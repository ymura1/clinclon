-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.activities
(
    activity_id uuid NOT NULL,
    owner_id uuid,
    activity_name character varying(250) COLLATE pg_catalog."default" NOT NULL,
    rate smallint,
    rate_type character varying(10) COLLATE pg_catalog."default",
    end_time_required boolean,
    status character varying(20) COLLATE pg_catalog."default" NOT NULL DEFAULT 'active'::character varying,
    update_date timestamp with time zone NOT NULL,
    update_by character varying(250) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT activitiy_pk PRIMARY KEY (activity_id)
);

CREATE TABLE IF NOT EXISTS public.otps
(
    otp_id uuid NOT NULL,
    owner_id uuid,
    otp character varying(10) COLLATE pg_catalog."default",
    create_date timestamp with time zone,
    CONSTRAINT otps_pkey PRIMARY KEY (otp_id)
);

CREATE TABLE IF NOT EXISTS public.owner_preference
(
    owner_preference_id integer NOT NULL DEFAULT nextval('owner_preference_owner_preference_id_seq'::regclass),
    owner_id uuid NOT NULL,
    preference_id integer NOT NULL DEFAULT nextval('owner_preference_preference_id_seq'::regclass),
    preference_value smallint,
    update_date timestamp with time zone NOT NULL,
    update_by character varying(250) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT owner_preference_pk PRIMARY KEY (owner_preference_id)
);

CREATE TABLE IF NOT EXISTS public.owner_preference_type
(
    preference_id smallint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 32767 CACHE 1 ),
    preferance_type character varying(30) COLLATE pg_catalog."default",
    preference_values jsonb,
    CONSTRAINT owner_preference_type_pk PRIMARY KEY (preference_id)
);

CREATE TABLE IF NOT EXISTS public.owners
(
    owner_id uuid NOT NULL,
    first_name character varying(250) COLLATE pg_catalog."default" NOT NULL,
    last_name character varying(250) COLLATE pg_catalog."default" NOT NULL,
    email_address character varying(250) COLLATE pg_catalog."default" NOT NULL,
    owner_password character varying(100) COLLATE pg_catalog."default",
    status character varying(10) COLLATE pg_catalog."default" NOT NULL DEFAULT 'active'::character varying,
    create_date timestamp with time zone NOT NULL,
    CONSTRAINT owners_pk PRIMARY KEY (owner_id)
);

CREATE TABLE IF NOT EXISTS public.time_record
(
    time_record_id uuid NOT NULL,
    activity_id uuid,
    user_id uuid,
    time_type_id smallint,
    record_date date NOT NULL,
    start_time time without time zone NOT NULL,
    geo_location smallint,
    status character varying(20) COLLATE pg_catalog."default" DEFAULT 'active'::character varying,
    update_date timestamp with time zone NOT NULL,
    update_by character varying(250) COLLATE pg_catalog."default" NOT NULL,
    end_time time without time zone,
    CONSTRAINT time_record_pk PRIMARY KEY (time_record_id)
);

CREATE TABLE IF NOT EXISTS public.time_record_v2
(
    time_record_id uuid NOT NULL,
    user_id uuid,
    start_time timestamp with time zone,
    end_time timestamp with time zone,
    update_date timestamp with time zone NOT NULL,
    update_by character varying(250) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT time_record_v2_pkey PRIMARY KEY (time_record_id)
);

CREATE TABLE IF NOT EXISTS public.time_type
(
    time_type_id smallint NOT NULL,
    time_type character varying(250) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT time_type_pk PRIMARY KEY (time_type_id)
);

CREATE TABLE IF NOT EXISTS public.users
(
    user_id uuid NOT NULL,
    owner_id uuid,
    first_name character varying(250) COLLATE pg_catalog."default",
    last_name character varying(250) COLLATE pg_catalog."default",
    user_name character varying(250) COLLATE pg_catalog."default" NOT NULL,
    rate smallint,
    rate_type character varying(10) COLLATE pg_catalog."default",
    status character varying(10) COLLATE pg_catalog."default" NOT NULL DEFAULT 'active'::character varying,
    update_date timestamp with time zone NOT NULL,
    update_by character varying(250) COLLATE pg_catalog."default" NOT NULL,
    user_password character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT user_pk PRIMARY KEY (user_id)
);

CREATE TABLE IF NOT EXISTS public.users_schedule
(
    users_schedule_id uuid NOT NULL,
    user_id uuid NOT NULL,
    day character varying(10) COLLATE pg_catalog."default",
    start_time character varying(10) COLLATE pg_catalog."default",
    end_time character varying(10) COLLATE pg_catalog."default",
    CONSTRAINT users_schedule_pkey PRIMARY KEY (users_schedule_id),
    CONSTRAINT users_schedule_uq_day UNIQUE (user_id, day)
);

ALTER TABLE IF EXISTS public.activities
    ADD CONSTRAINT activities_owners_fk FOREIGN KEY (owner_id)
    REFERENCES public.owners (owner_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.otps
    ADD CONSTRAINT otps_owner_id_fkey FOREIGN KEY (owner_id)
    REFERENCES public.owners (owner_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.owner_preference
    ADD CONSTRAINT owner_preference_owner_preference_type_fk FOREIGN KEY (preference_id)
    REFERENCES public.owner_preference_type (preference_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.owner_preference
    ADD CONSTRAINT owner_preference_owners_fk FOREIGN KEY (owner_id)
    REFERENCES public.owners (owner_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.time_record
    ADD CONSTRAINT time_record_activities_fk FOREIGN KEY (activity_id)
    REFERENCES public.activities (activity_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.time_record
    ADD CONSTRAINT time_record_time_type_fk FOREIGN KEY (time_type_id)
    REFERENCES public.time_type (time_type_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.time_record
    ADD CONSTRAINT time_record_users_fk FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.time_record_v2
    ADD CONSTRAINT time_record_v2_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.users
    ADD CONSTRAINT users_owners_fk FOREIGN KEY (owner_id)
    REFERENCES public.owners (owner_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.users_schedule
    ADD CONSTRAINT fk_user_id FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;